#pragma once
#include "InformationCarrier.h"
class MediaList // Класс хранящий, массив объектов классов "USB", "HDD", "DVD".
{
	int m_size; // Количество объектов в массиве (размер массива).
	InformationCarrier** m_mediaList; // Динамический массив указателей на базовый класс "InformationCarrier".
public:
	// Конструктор по умолчанию.
	MediaList();

	// Деструктор.
	~MediaList();

	// Получить количество устройств в списке.
	int get_size() const;

	// Добавление устройства.
	void AddDevice();

	// Печать списка уcтройств.
	void PrintAll() const;
	/*TODO:печати (цикл фор, внутри одна строчка - полиморфизм) всего массива устройств и отдельно печать каждого вида устройств (использовать
	RTTI dynamic_cast либо type_id). Реализовать каку-то печать через dynamic_cast и что-то через type_id. 02,48,40
	сделать подменю типа печать всех или печать юзб, двд, хдд.
	*/

	// Удаление устройства по номеру.
	void Delete(int number);

	// Изменение по номеру параметров носителя.
	void Change(int number);

	// Поиск по заданному критерию.
	void Search();

	// Сохранение в файл




	// TODO: реализовать:
	/*
	* возможность	добавления устройства
	* удаления (по номеру), вывести список устройств пронумеровав и по i-тому удалить из массива.
	* печати (цикл фор, внутри одна строчка - полиморфизм) всего массива устройств и отдельно печать каждого вида устройств (использовать
	RTTI dynamic_cast либо type_id). Реализовать каку-то печать через dynamic_cast и что-то через type_id. 02,48,40
	* изменения (по	номеру) определённых параметров носителя. как в печати по і-тому елементу
	* поиска по	заданному критерию , по разным критериям поиск.



	*  а также возможность загрузки данных из	файла. Поле Наименование сохраняем первое, для понимая что мы вычитываем
	и создать пустой объект соотвествуючего класса, а потом дочитывать все остальное, вызвав на новосозжанном обьекте лоад,
	через виртуальный метод (полиморфизм) и	дописывать в новосозджанный объект данные.
	* сохранения данных в файл. через фор и для каждого устройства будет візіватся свой сейв через полиморфизм.
	Все примерно как делалось в 21-ом задании.
	* Методы печати, загрузки, сохранения - через полиморфизм.
	 */
};

