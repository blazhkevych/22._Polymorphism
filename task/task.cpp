/*
############################################ ЗАДАНИЕ ###########################################
				Список носителей информации
		Разработать программу, которая формирует список
	носителей информации, таких как, USB-флеш-накопитель,
	портативный жесткий диск, DVD–диск. Каждый носитель
	информации является объектом соответствующего класса:
		* класс «USB-флеш-накопитель»;
		* класс «Портативный жесткий диск»;
		* класс «DVD–диск».
		Все три класса являются производными от абстрактного
	базового класса «Носитель информации».
		В базовом классе хранится имя производителя, модель,
	наименование, ёмкость носителя, количество. Класс обладает
	всеми необходимыми методами-аксессорами, а также
	методами печати, загрузки и сохранения. В производных
	классах переопределяются методы печати, загрузки и
	сохранения. Кроме того, каждый из производных классов
	дополняется следующими полями:
		* класс «USB-флеш-накопитель»: скорость USB;
		* класс «Портативный жесткий диск»: скорость вращения
	шпинделя;
		* класс «DVD–диск»: скорость записи.
		Работа с объектами соответствующих классов
	производится через указатели на базовый класс, которые
	хранятся в динамическом массиве.
		Программа должна предоставлять возможность
	добавления, удаления (по номеру), печати, изменения (по
	номеру) определённых параметров носителя, поиска по
	заданному критерию, а также возможность загрузки данных из
	файла и сохранения данных в файл.
		Поле «Наименование носителя» следует применять для
	идентификации носителя информации только при загрузке
	данных из файла. В остальных случаях для идентификации
	носителя информации необходимо применять механизм RTTI
	(динамическая идентификация типа) либо полиморфное
	приведение типов с использованием оператора dynamic_cast.
################################################################################################
задание похоже на 21-е
02,36,46
*/

#include <Windows.h>
#include <iostream>

#include "InformationCarrier.h"
using std::cout;
using std::cin;
using std::endl;

int main()
{
	SetConsoleCP(1251);
	/*
	Задает кодовую страницу ввода, используемую консолью, связанной с вызывающим процессом.
	Консоль использует страницу входного кода для преобразования ввода с клавиатуры
	в соответствующее символьное значение.
	*/
	SetConsoleOutputCP(1251);
	/*
	Задает выходную кодовую страницу, используемую консолью, связанной с вызывающим процессом.
	Консоль использует свою кодовую страницу вывода для преобразования символьных значений,
	записанных различными функциями вывода, в изображения, отображаемые в окне консоли.
	*/

	InformationCarrier arr;		//Создание массива

	while (true)
	{
		cout << "----------------------------------Storage InformationCarrier----------------------------------" << endl;
		cout << "1) Заполнить элемент случайными значениями (Для удобства дебага)" << endl;
		cout << "2) Вывести содержимое массива" << endl;
		cout << "3) Внести изменение в элемент" << endl;
		cout << "4) Удаление элемента массива" << endl;
		cout << "5) Поиск в массиве по значению" << endl;
		cout << "6) Добавить элемент" << endl;
		cout << "7) Запись в файл" << endl;
		cout << "8) Выгрузка из файла" << endl;
		cout << "9) Выход" << endl;
		int choi;
		int a;
		cout << "Выбор :";
		cin >> choi;
		switch (choi)
		{
		case 1:
			arr.rand__str();
			break;
		case 2:
			arr.Print();
			break;
		case 3:
			cout << "Номер элемента	:" << endl;
			cin >> a;
			arr.chan(a);
			break;
		case 4:
			cout << "Номер элемента	:" << endl;
			cin >> a;
			arr.dell(a);
			break;
		case 5:
			arr.search();
			break;
		case 6:
			arr.add();
			break;
		case 7:
			arr.write();
			break;
		case 8:
			arr.read();
			break;
		case 9:
			return 0;
		default:
			break;
		}
	}

}